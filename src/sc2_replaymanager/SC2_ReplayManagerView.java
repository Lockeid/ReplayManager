/*
 * SC2_ReplayManagerView.java
 */

package sc2_replaymanager;

import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import org.jdesktop.application.Action;
import org.jdesktop.application.SingleFrameApplication;
import org.jdesktop.application.FrameView;
import javax.swing.JDialog;
import javax.swing.JFrame;

import java.io.File;
import java.util.ArrayList;
import java.util.Iterator;


class ZipFilter extends javax.swing.filechooser.FileFilter {
        @Override
        public boolean accept(File file) {
            // Allow only directories, or files with ".zip" extension
            return file.isDirectory()|| file.getAbsolutePath().endsWith(".zip");
        }
        @Override
       public String getDescription() {
            // This description will be displayed in the dialog,
            // hard-coded = ugly, should be done via I18N
            return "Zip Archives (*.zip)";
       }
    }
class ReplayFilter extends javax.swing.filechooser.FileFilter {
        @Override
        public boolean accept(File file) {
            // Allow only directories, or files with ".sc2replay" extension
            return file.isDirectory() || file.getAbsolutePath().endsWith(".SC2Replay") || file.getAbsolutePath().endsWith(".sc2replay");
        }
        @Override
        public String getDescription() {
            // This description will be displayed in the dialog,
            // hard-coded = ugly, should be done via I18N
            return "Starcraft II Replay (*.SC2Replay)";
        }
    }

/**
 * The application's main frame.
 */
public class SC2_ReplayManagerView extends FrameView {

    public SC2_ReplayManagerView(SingleFrameApplication app) {
        super(app);

        initComponents();
    }

    @Action
    public void showAboutBox() {
        if (aboutBox == null) {
            JFrame mainFrame = SC2_ReplayManagerApp.getApplication().getMainFrame();
            aboutBox = new SC2_ReplayManagerAboutBox(mainFrame);
            aboutBox.setLocationRelativeTo(mainFrame);
        }
        SC2_ReplayManagerApp.getApplication().show(aboutBox);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        ZipButton = new javax.swing.JButton();
        ZipLabel = new javax.swing.JLabel();
        ReplayButton = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        ReplayLabel = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JSeparator();
        Copyright = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        menuBar = new javax.swing.JMenuBar();
        javax.swing.JMenu fileMenu = new javax.swing.JMenu();
        javax.swing.JMenuItem exitMenuItem = new javax.swing.JMenuItem();
        javax.swing.JMenu helpMenu = new javax.swing.JMenu();
        javax.swing.JMenuItem aboutMenuItem = new javax.swing.JMenuItem();
        zipChooser = new javax.swing.JFileChooser();
        replayChooser = new javax.swing.JFileChooser();

        mainPanel.setMaximumSize(new java.awt.Dimension(300, 240));
        mainPanel.setName("mainPanel"); // NOI18N

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(sc2_replaymanager.SC2_ReplayManagerApp.class).getContext().getResourceMap(SC2_ReplayManagerView.class);
        jLabel1.setFont(resourceMap.getFont("jLabel1.font")); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N

        jSeparator1.setName("jSeparator1"); // NOI18N

        ZipButton.setText(resourceMap.getString("ZipButton.text")); // NOI18N
        ZipButton.setName("ZipButton"); // NOI18N
        ZipButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ZipButtonActionPerformed(evt);
            }
        });

        ZipLabel.setText(resourceMap.getString("ZipLabel.text")); // NOI18N
        ZipLabel.setName("ZipLabel"); // NOI18N

        ReplayButton.setText(resourceMap.getString("ReplayButton.text")); // NOI18N
        ReplayButton.setName("ReplayButton"); // NOI18N
        ReplayButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ReplayButtonActionPerformed(evt);
            }
        });

        jSeparator2.setName("jSeparator2"); // NOI18N

        ReplayLabel.setText(resourceMap.getString("ReplayLabel.text")); // NOI18N
        ReplayLabel.setName("ReplayLabel"); // NOI18N

        jSeparator3.setName("jSeparator3"); // NOI18N

        Copyright.setForeground(resourceMap.getColor("Copyright.foreground")); // NOI18N
        Copyright.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Copyright.setText(resourceMap.getString("Copyright.text")); // NOI18N
        Copyright.setName("Copyright"); // NOI18N

        jLabel2.setForeground(resourceMap.getColor("jLabel2.foreground")); // NOI18N
        jLabel2.setText(resourceMap.getString("jLabel2.text")); // NOI18N
        jLabel2.setName("jLabel2"); // NOI18N

        jLabel3.setForeground(resourceMap.getColor("jLabel3.foreground")); // NOI18N
        jLabel3.setText(resourceMap.getString("jLabel3.text")); // NOI18N
        jLabel3.setName("jLabel3"); // NOI18N

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jSeparator2, javax.swing.GroupLayout.DEFAULT_SIZE, 330, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, mainPanelLayout.createSequentialGroup()
                                .addComponent(ZipButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ZipLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 209, Short.MAX_VALUE))
                            .addComponent(jSeparator1, javax.swing.GroupLayout.DEFAULT_SIZE, 330, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 330, Short.MAX_VALUE)))
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(ReplayButton)
                        .addGap(18, 18, 18)
                        .addComponent(ReplayLabel))
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jSeparator3, javax.swing.GroupLayout.DEFAULT_SIZE, 330, Short.MAX_VALUE))
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addGap(100, 100, 100)
                        .addComponent(Copyright, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)
                        .addGap(100, 100, 100))
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel2))
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel3)))
                .addContainerGap())
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ZipButton)
                    .addComponent(ZipLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addGap(5, 5, 5)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 9, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ReplayButton)
                    .addComponent(ReplayLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addGap(6, 6, 6)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Copyright)
                .addContainerGap(13, Short.MAX_VALUE))
        );

        menuBar.setName("menuBar"); // NOI18N

        fileMenu.setText(resourceMap.getString("fileMenu.text")); // NOI18N
        fileMenu.setName("fileMenu"); // NOI18N

        javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance(sc2_replaymanager.SC2_ReplayManagerApp.class).getContext().getActionMap(SC2_ReplayManagerView.class, this);
        exitMenuItem.setAction(actionMap.get("quit")); // NOI18N
        exitMenuItem.setName("exitMenuItem"); // NOI18N
        fileMenu.add(exitMenuItem);

        menuBar.add(fileMenu);

        helpMenu.setText(resourceMap.getString("helpMenu.text")); // NOI18N
        helpMenu.setName("helpMenu"); // NOI18N

        aboutMenuItem.setAction(actionMap.get("showAboutBox")); // NOI18N
        aboutMenuItem.setName("aboutMenuItem"); // NOI18N
        helpMenu.add(aboutMenuItem);

        menuBar.add(helpMenu);

        zipChooser.setFileFilter(new ZipFilter());
        zipChooser.setFileSelectionMode(javax.swing.JFileChooser.FILES_AND_DIRECTORIES);
        zipChooser.setMultiSelectionEnabled(true);
        zipChooser.setName("zipChooser"); // NOI18N

        replayChooser.setFileFilter(new ReplayFilter());
        replayChooser.setFileSelectionMode(javax.swing.JFileChooser.FILES_AND_DIRECTORIES);
        replayChooser.setMultiSelectionEnabled(true);
        replayChooser.setName("replayChooser"); // NOI18N

        setComponent(mainPanel);
        setMenuBar(menuBar);
    }// </editor-fold>//GEN-END:initComponents

    private void ZipButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ZipButtonActionPerformed
        // TODO add your handling code here:

        int returnVal = zipChooser.showOpenDialog(SC2_ReplayManagerApp.getApplication().getMainFrame());
        if (returnVal == JFileChooser.APPROVE_OPTION) {
        // This error is thrown when there is a problem in the script.
            ZipLabel.setText("Operation in progress");
            File[] files = zipChooser.getSelectedFiles();
            System.out.println(files);
            ArrayList loc = ReplayLocation.main();
            for (int i=0; i < files.length; i++) {
                File file = files[i];
                for (Iterator it = loc.iterator(); it.hasNext(); ) {
                   String path = (String)it.next();
                    
                   ZipHandler.main(file.getPath(), path);
                   System.out.println("Success " + file.getName());

                   ZipLabel.setText( "Archived(s) decompressed successfully !");
                }
           }
        }
    }//GEN-LAST:event_ZipButtonActionPerformed

    private void ReplayButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ReplayButtonActionPerformed
        // TODO add your handling code here:
         ReplayLocation.main();
        int returnVal = replayChooser.showOpenDialog(SC2_ReplayManagerApp.getApplication().getMainFrame());
        if (returnVal == JFileChooser.APPROVE_OPTION) {
        // This error is thrown when there is a problem in the script.
            ReplayLabel.setText("Operation in progress");
            File[] files = replayChooser.getSelectedFiles();
            System.out.println(files);
            ArrayList loc = ReplayLocation.main();
            for (int i=0; i < files.length; i++) {
            File file = files[i];
            for (Iterator it = loc.iterator(); it.hasNext(); ) {
               String path = (String)it.next();
                try {
                    Runtime.getRuntime().exec("cmd.exe /K COPY \"" + file + "\" \"" + path + "\"");
                    System.out.println("Success " + file.getName());
                    ReplayLabel.setText("Replay(s) copied successfully !");
                } catch (IOException ex) {
                    Logger.getLogger(SC2_ReplayManagerView.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
           }
        }
    }//GEN-LAST:event_ReplayButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Copyright;
    private javax.swing.JButton ReplayButton;
    public javax.swing.JLabel ReplayLabel;
    private javax.swing.JButton ZipButton;
    public javax.swing.JLabel ZipLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JFileChooser replayChooser;
    private javax.swing.JFileChooser zipChooser;
    // End of variables declaration//GEN-END:variables

   

    private JDialog aboutBox;
}
